CREATE TABLE employee (
    emp_id INTEGER PRIMARY KEY,
    emp_name VARCHAR(50) NOT NULL
);

CREATE TABLE department (
    dept_id INTEGER PRIMARY KEY,
    dept_name VARCHAR(50) NOT NULL
);

CREATE TABLE paydetails (
    emp_id INTEGER,
    dept_id INTEGER,
    basic INTEGER,
    deductions INTEGER,
    additions INTEGER,
    DOJ DATE,
    PRIMARY KEY (emp_id, dept_id),
    FOREIGN KEY (emp_id) REFERENCES employee(emp_id),
    FOREIGN KEY (dept_id) REFERENCES department(dept_id)
);

CREATE TABLE payroll (
    emp_id INTEGER,
    pay_date DATE,
    PRIMARY KEY (emp_id, pay_date),
    FOREIGN KEY (emp_id) REFERENCES employee(emp_id)
);


-- Inserting records into employee table
INSERT INTO employee (emp_id, emp_name) VALUES
(1, 'John Doe'),
(2, 'Jane Smith'),
(3, 'Michael Johnson'),
(4, 'Emily Brown'),
(5, 'David Wilson'),
(6, 'Sarah Lee'),
(7, 'Robert Davis'),
(8, 'Jennifer Martinez'),
(9, 'Daniel Taylor'),
(10, 'Lisa Rodriguez');

-- Inserting records into department table
INSERT INTO department (dept_id, dept_name) VALUES
(1, 'Engineering'),
(2, 'Finance'),
(3, 'Human Resources'),
(4, 'Marketing'),
(5, 'Operations'),
(6, 'Sales'),
(7, 'IT'),
(8, 'Customer Service'),
(9, 'Research & Development'),
(10, 'Administration');

-- Inserting records into paydetails table
INSERT INTO paydetails (emp_id, dept_id, basic, deductions, additions, DOJ) VALUES
(1, 1, 80000, 2000, 500, '2023-01-01'),
(2, 2, 60000, 1500, 300, '2023-01-01'),
(3, 3, 45000, 1000, 200, '2023-01-01'),
(4, 4, 70000, 1800, 400, '2023-01-01'),
(5, 5, 55000, 1200, 250, '2023-01-01'),
(6, 6, 75000, 2000, 600, '2023-01-01'),
(7, 7, 48000, 1300, 220, '2023-01-01'),
(8, 8, 72000, 1900, 450, '2023-01-01'),
(9, 9, 51000, 1100, 280, '2023-01-01'),
(10, 10, 68000, 1700, 350, '2023-01-01');

-- Inserting records into payroll table (assuming current date as pay date)
INSERT INTO payroll (emp_id, pay_date) VALUES
(1, CURRENT_DATE),
(2, CURRENT_DATE),
(3, CURRENT_DATE),
(4, CURRENT_DATE),
(5, CURRENT_DATE),
(6, CURRENT_DATE),
(7, CURRENT_DATE),
(8, CURRENT_DATE),
(9, CURRENT_DATE),
(10, CURRENT_DATE);



DECLARE @emp_id INTEGER;
DECLARE @salary INTEGER;

DECLARE salary_cursor CURSOR FOR
SELECT emp_id, basic FROM paydetails;

OPEN salary_cursor;
FETCH NEXT FROM salary_cursor INTO @emp_id, @salary;

WHILE @@FETCH_STATUS = 0
BEGIN
    IF @salary >= 75000 THEN
        UPDATE paydetails SET basic = basic + 5000 WHERE emp_id = @emp_id;
    ELSE IF @salary >= 50000 THEN
        UPDATE paydetails SET basic = basic + 3000 WHERE emp_id = @emp_id;
    ELSE
        UPDATE paydetails SET basic = basic + 1500 WHERE emp_id = @emp_id;
    
    FETCH NEXT FROM salary_cursor INTO @emp_id, @salary;
END

CLOSE salary_cursor;
DEALLOCATE salary_cursor;

