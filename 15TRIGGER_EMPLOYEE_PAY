15. Database Schema for a Employee-pay scenario
employee(emp_id : integer, emp_name: string)
department(dept_id: integer, dept_name:string)
paydetails(emp_id : integer, dept_id: integer, salary: integer, DOJ: date)
16. payroll(emp_id : integer, pay_date: date)
Write a trigger which will restrict insertion of new employee record having salary less than Rs.
20000.

-- Create tables with constraints
CREATE TABLE employee (
    emp_id INTEGER PRIMARY KEY,
    emp_name VARCHAR(50) NOT NULL
);

CREATE TABLE department (
    dept_id INTEGER PRIMARY KEY,
    dept_name VARCHAR(50) NOT NULL
);

CREATE TABLE paydetails (
    emp_id INTEGER,
    dept_id INTEGER,
    basic INTEGER,
    deductions INTEGER,
    additions INTEGER,
    DOJ DATE,
    FOREIGN KEY (emp_id) REFERENCES employee(emp_id),
    FOREIGN KEY (dept_id) REFERENCES department(dept_id)
);

CREATE TABLE payroll (
    emp_id INTEGER,
    pay_date DATE,
    FOREIGN KEY (emp_id) REFERENCES employee(emp_id)
);

-- Inserting records
INSERT INTO employee (emp_id, emp_name) VALUES
(1, 'John Doe'),
(2, 'Jane Smith'),
(3, 'Michael Johnson'),
(4, 'Emily Davis'),
(5, 'David Brown'),
(6, 'Sarah Wilson'),
(7, 'Chris Miller'),
(8, 'Jessica Taylor'),
(9, 'Kevin Martinez'),
(10, 'Lisa Anderson');

INSERT INTO department (dept_id, dept_name) VALUES
(1, 'HR'),
(2, 'Finance'),
(3, 'Marketing'),
(4, 'IT'),
(5, 'Operations');

INSERT INTO paydetails (emp_id, dept_id, basic, deductions, additions, DOJ) VALUES
(1, 1, 25000, 2000, 1000, '2023-01-15'),
(2, 2, 28000, 2500, 1200, '2023-02-20'),
(3, 3, 22000, 1800, 900, '2023-03-10'),
(4, 4, 30000, 3000, 1500, '2023-04-05'),
(5, 5, 26000, 2200, 1100, '2023-05-12'),
(6, 1, 21000, 1700, 800, '2023-06-18'),
(7, 2, 24000, 2100, 1000, '2023-07-22'),
(8, 3, 29000, 2800, 1300, '2023-08-30'),
(9, 4, 32000, 3500, 1600, '2023-09-08'),
(10, 5, 27000, 2400, 1200, '2023-10-14');

INSERT INTO payroll (emp_id, pay_date) VALUES
(1, '2023-05-01'),
(2, '2023-05-01'),
(3, '2023-05-01'),
(4, '2023-05-01'),
(5, '2023-05-01'),
(6, '2023-05-01'),
(7, '2023-05-01'),
(8, '2023-05-01'),
(9, '2023-05-01'),
(10, '2023-05-01');


-- Creating a trigger
CREATE OR REPLACE FUNCTION check_salary()
RETURNS TRIGGER AS $$
BEGIN
    IF NEW.basic < 20000 THEN
        RAISE EXCEPTION 'Salary cannot be less than Rs. 20000';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER salary_check
BEFORE INSERT ON paydetails
FOR EACH ROW EXECUTE FUNCTION check_salary();

