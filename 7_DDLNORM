7. Design and implement a database using DDL statements and apply normalization on them.


CREATE DATABASE PRACTICAL7;
USE PRACTICAL7;

CREATE TABLE Authors (
    author_id INT AUTO_INCREMENT PRIMARY KEY,
    author_name VARCHAR(100) NOT NULL
);

CREATE TABLE Books (
    book_id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    author_id INT,
    genre VARCHAR(50),
    publication_year INT,
    FOREIGN KEY (author_id) REFERENCES Authors(author_id)
);
-- Inserting authors
INSERT INTO Authors (author_name) VALUES ('J.K. Rowling');
INSERT INTO Authors (author_name) VALUES ('George Orwell');
INSERT INTO Authors (author_name) VALUES ('Harper Lee');

-- Inserting books
INSERT INTO Books (title, author_id, genre, publication_year) VALUES ('Harry Potter and the Philosopher''s Stone', 1, 'Fantasy', 1997);
INSERT INTO Books (title, author_id, genre, publication_year) VALUES ('1984', 2, 'Dystopian Fiction', 1949);
INSERT INTO Books (title, author_id, genre, publication_year) VALUES ('To Kill a Mockingbird', 3, 'Southern Gothic', 1960);

-- Retrieve all books and their authors
SELECT Books.title, Authors.author_name
FROM Books
JOIN Authors ON Books.author_id = Authors.author_id;


/*DONT RUN THIS:

Our tables are currently in the first normal form (1NF) as there are no repeating groups.

To achieve Second Normal Form (2NF), we need to ensure that all non-key attributes are fully functional dependent on the primary key. Our tables already satisfy this condition.

For Third Normal Form (3NF), we need to ensure that there are no transitive dependencies. In our current design, there's no such dependency.

Therefore, our tables are already in the third normal form, and normalization is complete.
*/
